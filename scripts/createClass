#!/usr/bin/env python

import sys
import os
import re

usage = """
Creates a new .h and .cpp file and add default settings to the CMakeLists.txt files
    
    usage:
    createClass [module::]classname
"""

def createDir(BeginPath,namespaces,cmake=True):
  if len(namespaces):
    for n in namespaces:
      BeginPath += "/" + n
      if not os.path.exists(BeginPath):
        os.makedirs(BeginPath)
	if cmake:
          cmakePath = BeginPath[:BeginPath.find(n)]+"CMakeLists.txt"
          with open(cmakePath,"a+") as cmakeFile:
            cmakeFile.write("""
file(GLOB """+n.upper()+"""_SRC """+n+"""/*.cpp)
ADD_LIBRARY("""+n+""" ${"""+n.upper()+"""_SRC})""")
  return BeginPath


def lower(string):
  words = re.findall('[A-Z][^A-Z]*',string)
  ret = ""
  for word in words:
    ret += word.lower()+"_"
  return ret[:-1]

if len(sys.argv) !=2:
  print usage
  sys.exit(-1)
argString   = sys.argv[1].split("::")
namespaces  = argString[:-1]
if len(namespaces) <1:
	namespaces.append("")
className    = argString[-1]
print className
currentPath = os.path.dirname(os.path.realpath(__file__));
head        = currentPath.find("/JuML/")
includePath     = currentPath[:head+5] + "/include"
srcPath     = currentPath[:head+5] + "/src"

includePath = createDir(includePath,namespaces,False)
srcPath = createDir(srcPath, namespaces)

nameLower = lower(className)
nameUpper = nameLower.upper()
namespace = "yuml"

with open(includePath+"/"+nameLower+".h","w+") as headerFile:
  headerFile.write("""#ifndef """+nameUpper+"""_H
#define """+nameUpper+"""_H

namespace """+namespace+"""{

class """+className+"""{
/*### Constructor and Destructor ###*/
public:
  """+className+"""();
  ~"""+className+"""();

}; // """+className+"""
} // """+namespace+"""
#endif // """+nameUpper+"""_H""")

with open(srcPath + "/" + nameLower + ".cpp" ,"w+") as srcFile:
  srcFile.write("""#include \""""+namespaces[-1]+"""/"""+nameLower+""".h\"

yuml::"""+className+"""::"""+className+"""(){

}

yuml::"""+className+"""::~"""+className+"""(){

}

""")
