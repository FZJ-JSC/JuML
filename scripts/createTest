#!/usr/bin/env python

import sys
import os
import re

def lower(string):
  words = re.findall('[A-Z][^A-Z]*',string)
  ret = ""
  for word in words:
    ret += word.lower()+"_"
  return ret[:-1]


argString   = sys.argv[1].split("::")
namespaces  = argString[:-1]
testName    = argString[-1]
currentPath = os.path.dirname(os.path.realpath(__file__));
head        = currentPath.find("/JuML/")
dirpath     = currentPath[:head+5] + "/tests"

if len(namespaces):
  for n in namespaces:
    dirpath += "/" + n
    if not os.path.exists(dirpath):
      os.makedirs(dirpath)
      cmakePath = dirpath[:dirpath.find(n)]+"CMakeLists.txt"
      print cmakePath
      with open(cmakePath,"a+") as cmakeFile:
        cmakeFile.write("ADD_SUBDIRECTORY("+n+")\n")

with open(dirpath+"/"+lower(testName)+".cpp","w+") as testFile:
  testFile.write("""#include <gtest/gtest.h>
TEST (SampleTest, SampleCase){
  EXPECT_EQ(42,42);
}

int main(int argc, char **argv) {
  ::testing::InitGoogleTest(&argc, argv);
return RUN_ALL_TESTS();
}""")
testCAP = lower(testName).upper()
with open(dirpath + "/CMakeLists.txt","a+") as cmakeFile:
  cmakeFile.write("""
#Test for """+testCAP+"""
ADD_EXECUTABLE("""+testCAP+"""_TEST """+lower(testName)+""".cpp)
TARGET_LINK_LIBRARIES("""+testCAP+"""_TEST """+testCAP+""" gtest)
ADD_TEST("""+testCAP+"""_UNIT_TEST """+testCAP+"""_TEST)""")
